name: publish application

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      info:
        description: 'manual trigger'
        required: false
jobs:
  build-job:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && contains(github.event.head_commit.message, '[app build]')"
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: publish application docker to github packages
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u matanki-saito --password-stdin
          ./gradlew :rico_webapp:docker dockerPush
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER_NAME: matanki.saito
      - name: update version and tagging
        run: |
          git config --local user.email "matanki.saito@gmail.com"
          git config --local user.name "matanki.saito"
          ./gradlew :rico_webapp:release -Prelease.useAutomaticVersion=true
  deploy-job:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && contains(github.event.head_commit.message, '[app deploy]')"
    needs: build-job
    steps:
      - uses: actions/checkout@v2

      - name: Set version to env
        run: |
          VER=`cat rico_webapp/gradle.properties`
          echo "RELEASE_VERSION=${VER##version=}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: rico_webapp/rico-task.json
          container-name: rico-app
          image: ghcr.io/matanki-saito/pdx-txt-java/rico-app:${{ env.RELEASE_VERSION }}-app

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: rico-sv
          cluster: girls
          wait-for-service-stability: true
