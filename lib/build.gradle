/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'antlr'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15

dependencies {
    antlr 'org.antlr:antlr4:4.9.1'

    // https://blog1.mammb.com/entry/2017/08/01/121048

    // アノテーションプリプロセッサ用
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    // 外部(このライブラリの利用者)に公開する依存関係
    // api

    // 外部(このライブラリの利用者)に公開せず、ライブラリ内の実装でのみ使う依存関係
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.antlr:antlr4-runtime:4.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.1'
    implementation 'org.apache.commons:commons-lang3:3.11'

    // コンパイル時にのみ必要となる依存関係(実行時にリークしてはならないもの)
    compileOnly 'org.projectlombok:lombok:1.18.16'

    // コンパイル時には不要だが、実行時に必要な依存関係
    runtimeOnly 'org.antlr:antlr4-runtime:4.9.1'

    // テストをコンパイルするために使用される依存関係
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.assertj:assertj-core:3.19.0'

    // テストコンパイル時にのみ必要となる依存関係(実行時にリークしてはならないもの)
    testCompileOnly 'org.projectlombok:lombok:1.18.16'

    // テストランタイムでのみ必要となる依存関係
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    // Use junit platform for unit tests.
    useJUnitPlatform()
    jvmArgs = ['--enable-preview']
}

jar {
    archiveBaseName.set(rootProject.name)
    manifest {
        attributes(
                'Implementation-Title': rootProject.name,
                'Implementation-Version': project.version)
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    exclude "com/github/matanki_saito/rico/antlr/**"
    options.encoding = 'UTF-8'
    options.addBooleanOption('-enable-preview', true)
    options.addStringOption('-release', '15')
}

compileJava {
    options.compilerArgs += ['--enable-preview']
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.compilerArgs += ['--enable-preview']
    options.encoding = 'UTF-8'
}

publishing {
    // https://docs.github.com/ja/packages/guides/configuring-gradle-for-use-with-github-packages
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/matanki-saito/pdx-txt-java")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USER_NAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }

        publications {
            gpr(MavenPublication) {
                groupId = 'com.github.matanki_saito'
                artifactId = rootProject.name
                from(components.java)
            }
        }
    }
}

release {
    // [skip ci]をコメントに入れないと、無限ループする
    preTagCommitMessage = '[skip ci] [Gradle Release Plugin] - pre tag commit: '
    tagCommitMessage = '[skip ci] [Gradle Release Plugin] - creating tag: '
    newVersionCommitMessage = '[skip ci] [Gradle Release Plugin] - new version commit: '

    tagTemplate = 'lib-${version}'

    git {
        requireBranch = 'main'
    }
}

